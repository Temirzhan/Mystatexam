#include <stdio.h>
#include <locale.h>
#include "Header.h"
#include<iostream>
#include<time.h>
#include<string.h>

using namespace std;
char f;
void main()
{
	srand(time(NULL));
	setlocale(LC_ALL, "RUS");

	do
	{
		int N;
		printf("Введите номер задания\n");
		scanf("%d", &N);
		switch (N)
		{
		case 1:
			{
				// 22.	Написать функцию, которая получает указатель на массив и его размер, и возвращает сумму и произведение его элементов в двух параметрах - ссылках.
				int Massiv[2] = { 1,2 };
				int sum = 0;
				int proiz = 1;
			        SumProzMassiv(Massiv, &sum, &proiz, 2);
					printf("сумма = %d, произведение = %d\n", sum, proiz);
			}
			break;
		case 2:
		{
			/*
23.	Такую же функцию как и в 22 задании написать для многомерного массива (подумать в 2 стороны: 1. Перегрузка функций; 2 Ис-пользование указетелей на функйии)
a.	Типа int
b.	Типа double
c.	Типа Shor int
*/
			int t[2][2] = { {1,1},{1,1}};
			void(*fptr)(int *, int *, int *, int) = NULL;
			int sum = 0;
			int proiz = 1;
			fptr=SumProzMassivMnogomer;
			fptr(*t, &sum, &proiz, 2);
			printf("сумма = %d, произведение = %d\n", sum, proiz);

		}
		break;
		case 3:
		{
			/*25.	Написать функцию, которая получает указатель на массив и его размер
			(зармер при этом не передавать как число, а передавать как ссылку на последний элемент массива), 
			и возвращает количество отрицательных, положительных и нулевых элементов мас-сива, используя механизм ссылок.
			В данном задании обязательно необходимо использовать enum. (enum должен быть глобаль-ным на все файлы, подумать как это можно сделать не объявляя его везде)*/
			int Massiv[10];
			random(Massiv, 10);
			MassivInd(Massiv, &Massiv[9], pol);
		}
		break;
		case 4:
		{
			/*24.	Написать Функции для распечатки массивов, как одномерных, так и двумерных.*/
			int Massiv[2] = { 1,2 };
			int t[2][2] = { { 1,2 },{ 3,4 } };
			massivShow(Massiv, 2);
			massivShowMnogomer(*t, 2, 2);
		}
		break;
		case 5:
		{
			/*26.	Написать функцию, которая получает указатель на двумерный массив и его размер, и возвращает среднее арифметическое эле-ментов массива, 
			а также количество чётных и нечётных элементов, используя механизм ссылок.*/
			int chet=0;
			int nechet=0;
			int srednee = 0;
			int t[2][2] = { { 1,2 },{ 3,4 } };
			int *pt=MassiSrednee(*t, 2, 2, &chet, &nechet, &srednee);
			printf("Среднее арифметическое = %d, четных=%d,нечетных=%d\n", *pt, chet, nechet);
		}
		break;
		case 6:
		{
	/*30.	Написать рекурсивную функцию, которая вычисляет сумму всех чисел в диапазоне от a до b. Пользователь вводит a и  b. Проил-люстрируйте работу функции примером.*/
			int A = 1;
			int B = 2;
			int summ=0;
			summ=MyCurs(A,B);
				printf("Сумма = %d\n", summ);
		}
		case 7:
		{
			/*31.	**Напишите функцию, которая принимает дату (день, месяц, год) и возвращает номер дня недели, которому соответствует эта дата. 1 – понедельник, 2 – вторник, 3 – среда, 4 – четверг, 5 – пятница, 6 – суббота, 7 – воскресенье. При этом функция должна возвращать значение enum. Пользователю же необходимо отобразить корректный тест, не число дня недели. ( подумать как это можно реализовать. Подумать в сторону: 1. Еще одна функция которая возвращает указатель на строку; 2. Вариант подумать над использованием массива со значения, если учесть что при выводе enum-а, выводиться его порядковый номер)*/
			int t = 10; int *p = &t;
			
			

		}
		break;
		}
		printf("Хотите продолжить проверять задания\n");
		scanf("%c", &f);
	} while (f == 'y');

}